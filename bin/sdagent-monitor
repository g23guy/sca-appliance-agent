#!/bin/bash

SVER=1.0.4

##############################################################################
#  sdagent-monitor - SCA Agent Monitor Tool
#  Copyright (C) 2014 SUSE LLC
#
# Description:  Monitors the agent server CPU utilization
# Runs on:      Agent Server
# Modified:     2014 Jun 26
#
##############################################################################
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; version 2 of the License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, see <http://www.gnu.org/licenses/>.
#
#  Authors/Contributors:
#     Jason Record (jrecord@suse.com)
#
##############################################################################

CURRENT_SCRIPT=$(basename $0)
. /etc/sca/sdagent.conf
[ -s /etc/sca/sdagent-monitor.conf ] && . /etc/sca/sdagent-monitor.conf

msg() {
	FACLEVEL='info'
	case $1 in
	debug) SYSTEM_LOGGER=0; CURRENT_LOGLEVEL=$LOGLEVEL_DEBUG ;;
	verbose) SYSTEM_LOGGER=1; CURRENT_LOGLEVEL=$LOGLEVEL_VERBOSE ;;
	normal) SYSTEM_LOGGER=1; CURRENT_LOGLEVEL=$LOGLEVEL_NORMAL ;;
	min*) SYSTEM_LOGGER=1; CURRENT_LOGLEVEL=$LOGLEVEL_MIN ;;
	silent) SYSTEM_LOGGER=1; CURRENT_LOGLEVEL=$LOGLEVEL_SILENT ;;
	*) SYSTEM_LOGGER=1; CURRENT_LOGLEVEL=$LOGLEVEL_MIN ;;
	esac
	shift
	if [ $LOGLEVEL -ge $CURRENT_LOGLEVEL ]; then
		if [ $SYSTEM_LOGGER -gt 0 ]; then
			[ -n "$2" ] && logger -p "user.${FACLEVEL}" "${CURRENT_SCRIPT}[$$]: [$1] $2" || logger -p "user.${FACLEVEL}" "${CURRENT_SCRIPT}[$$]: $1"
			if [ $LOGLEVEL -gt $LOGLEVEL_SILENT ]; then
				printf "%-15s %s\n" "$1" "$2"
			fi
		else
			printf "%-15s %s\n" "$1" "$2"
		fi
	fi
}


notifyAdmin() {
	EVENT_STR=$1
	shift
	for SENDTO in $EMAIL_ADMIN
	do
		echo "$*" | /usr/bin/mailx -r "SCA Agent Notification <root>" -ns "Monitor Alert: $EVENT_STR" $SENDTO
	done
}

[ -s /etc/HOSTNAME ] && SERVER_NAME=$(head -1 /etc/HOSTNAME) || SERVER_NAME=$(hostname)
mysql $DB_CONNECT -e "USE $DB_NAME" &>/dev/null
if [ $? -gt 0 ]; then
	msg normal SQL "ERROR: Agent $SERVER_NAME cannot connect to the $DB_NAME database on $DB_HOSTNAME"
	[ $EMAIL_LEVEL -ge $EMAIL_MIN ] && notifyAdmin "DB Connection Failed" "ERROR: Agent $SERVER_NAME cannot connect to the $DB_NAME database on $DB_HOSTNAME"
	exit 2
else
	if [ -n "$AGENT_ID" ]; then
		CPU_IDLE=$(vmstat 1 2 | tail -1 | awk '{print $15}')
		CPU_UTIL=$((100-CPU_IDLE))
		mysql $DB_CONNECT -e "UPDATE Agents SET AgentEvent=NOW(), AgentMessage='Updated CPUCurrent', CPUCurrent=$CPU_UTIL WHERE AgentID=$AGENT_ID AND AgentState='Active'"
		if [ $? -gt 0 ]; then
			msg normal SQL "ERROR: Failed to update AgentID $AGENT_ID"
			[ $EMAIL_LEVEL -ge $EMAIL_MIN ] && notifyAdmin 'Agent $AGENT_ID Update Failed' "ERROR: Failed to update AgentID $AGENT_ID"
			exit 3
		else
			msg min MONITOR "v${SVER} -- Agent State, CPU Utilization: ${CPU_UTIL}%"
		fi
	else
		msg min CONFIG "Run sdagent-config on $SERVER_NAME"
		[ $EMAIL_LEVEL -ge $EMAIL_MIN ] && notifyAdmin 'Run sdagent-config' "Run sdagent-config on $SERVER_NAME"
		exit 4
	fi
fi

